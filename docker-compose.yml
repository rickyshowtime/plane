version: "3.8"

x-app-env: &app-env
  environment:
    - NGINX_PORT=${NGINX_PORT:-80}
    - WEB_URL=${WEB_URL}
    - DEBUG=${DEBUG}
    - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE:-plane.settings.production}
    - NEXT_PUBLIC_DEPLOY_URL=${NEXT_PUBLIC_DEPLOY_URL}
    - SENTRY_DSN=${SENTRY_DSN}
    - SENTRY_ENVIRONMENT=${SENTRY_ENVIRONMENT:-"production"}
    - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-""}
    - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID:-""}
    - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET:-""}
    - DOCKERIZED=${DOCKERIZED:-1}
    - CORS_ALLOWED_ORIGINS=${NEXT_PUBLIC_API_BASE_URL}
    # Gunicorn Workers
    - GUNICORN_WORKERS=${GUNICORN_WORKERS:-2}
    #DB SETTINGS
    - PGHOST=${PGHOST}
    - PGDATABASE=${PGDATABASE}
    - POSTGRES_USER=${PGUSER}
    - POSTGRES_PASSWORD=${PGPASSWORD}
    - POSTGRES_DB=${PGDATABASE}
    - PGDATA=${PGDATA:-/var/lib/postgresql/data}
    - DATABASE_URL=postgresql://${PGUSER}:${PGPASSWORD}@${PGHOST}:5432/${PGDATABASE}?currentSchema=${PGSCHEMA:-public}
    # REDIS SETTINGS
    - REDIS_HOST=plane-redis
    - REDIS_PORT=6379
    - REDIS_URL=redis://plane-redis:6379/
    # EMAIL SETTINGS - Deprecated can be configured through admin panel
    - EMAIL_HOST=${EMAIL_HOST}
    # - EMAIL_HOST_USER=${EMAIL_HOST_USER:-""}
    # - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD:-""}
    - EMAIL_PORT=${EMAIL_PORT}
    - EMAIL_FROM=${EMAIL_FROM}
    - EMAIL_USE_TLS=${EMAIL_USE_TLS:-0}
    - EMAIL_USE_SSL=${EMAIL_USE_SSL:-0}
    - DEFAULT_EMAIL=${DEFAULT_EMAIL}
    - DEFAULT_PASSWORD=${DEFAULT_PASSWORD}
    # OPENAI SETTINGS - Deprecated can be configured through admin panel
    - OPENAI_API_BASE=${OPENAI_API_BASE:-https://api.openai.com/v1}
    - OPENAI_API_KEY=${OPENAI_API_KEY:-""}
    - GPT_ENGINE=${GPT_ENGINE:-"gpt-3.5-turbo"}
    # LOGIN/SIGNUP SETTINGS - Deprecated can be configured through admin panel
    - ENABLE_SIGNUP=${ENABLE_SIGNUP:-1}
    - ENABLE_EMAIL_PASSWORD=${ENABLE_EMAIL_PASSWORD:-1}
    - ENABLE_MAGIC_LINK_LOGIN=${ENABLE_MAGIC_LINK_LOGIN:-0}
    # Application secret
    - SECRET_KEY=${NEXTAUTH_SECRET}
    # DATA STORE SETTINGS
    - USE_MINIO=1
    - AWS_REGION=${AWS_REGION:-""}
    - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:-root}
    - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:-ADMIN_PASSWORD}
    - AWS_S3_ENDPOINT_URL=${AWS_S3_ENDPOINT_URL:-http://plane-minio:9000}
    - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME:-uploads}
    - MINIO_ROOT_USER=root
    - MINIO_ROOT_PASSWORD=${ADMIN_PASSWORD}
    - BUCKET_NAME=${BUCKET_NAME:-uploads}
    - FILE_SIZE_LIMIT=${FILE_SIZE_LIMIT:-5242880}

services:
  web:
    <<: *app-env
    image: makeplane/plane-frontend:${SOFTWARE_VERSION_TAG}
    restart: always
    command: /usr/local/bin/start.sh web/server.js web
    depends_on:
      - api
      - worker

  space:
    <<: *app-env
    image: makeplane/plane-space:${SOFTWARE_VERSION_TAG}
    restart: always
    command: /usr/local/bin/start.sh space/server.js space
    depends_on:
      - api
      - worker
      - web

  api:
    <<: *app-env
    image: makeplane/plane-backend:${SOFTWARE_VERSION_TAG}
    restart: always
    command: ./bin/takeoff
    depends_on:
      - plane-db
      - plane-redis

  worker:
    <<: *app-env
    image: makeplane/plane-backend:${SOFTWARE_VERSION_TAG}
    restart: always
    command: ./bin/worker
    depends_on:
      - api
      - plane-db
      - plane-redis

  beat-worker:
    <<: *app-env
    image: makeplane/plane-backend:${SOFTWARE_VERSION_TAG}
    restart: always
    command: ./bin/beat
    depends_on:
      - api
      - plane-db
      - plane-redis

  migrator:
    <<: *app-env
    image: makeplane/plane-backend:${SOFTWARE_VERSION_TAG}
    command: >
      sh -c "python manage.py wait_for_db &&
           python manage.py migrate"
    depends_on:
      - plane-db
      - plane-redis

  plane-db:
    <<: *app-env
    image: elestio/postgres:15
    restart: always
    command: postgres -c 'max_connections=1000'
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - 172.17.0.1:2489:5432

  plane-redis:
    <<: *app-env
    image: elestio/redis:6.0
    restart: always
    volumes:
      - ./redisdata:/data

  plane-minio:
    <<: *app-env
    image: elestio/minio:latest
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: ${ADMIN_PASSWORD}
    restart: always
    command: server /export --console-address ":9090"
    volumes:
      - ./uploads:/export

  proxy:
    <<: *app-env
    image: makeplane/plane-proxy:${SOFTWARE_VERSION_TAG}
    restart: always
    ports:
      - 172.17.0.1:2845:80
    depends_on:
      - web
      - api
      - space

  pgadmin4:
    image: elestio/pgadmin:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${ADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: 8080
    ports:
      - "172.17.0.1:8145:8080"
    volumes:
      - ./servers.json:/pgadmin4/servers.json
